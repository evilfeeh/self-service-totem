name: "publish docker image"

on:
  release:
    types: [published]
  
env:
  IMAGE_NAME: evilfeeh/self-service-totem
  EKS_CLUSTER_NAME: self-service-totem
  AWS_REGION: us-east-1
  REGISTRY: hub.docker.com

jobs:
  push_to_registry:  
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
         
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME}}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   needs: [ push_to_registry ]
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #         aws-region: ${{env.AWS_REGION}}

  #     - name: Update kube config
  #       run: aws eks update-kubeconfig --name ${{env.EKS_CLUSTER_NAME}} --region ${{env.AWS_REGION}}
    
  #     - name: Deploy to EKS
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
  #         IMAGE_TAG: ${{ steps.commit.outputs.short }}
  #       run: |
  #         sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/hello-app-deployment.yaml && \
  #         kubectl apply -f manifests/hello-app-deployment.yaml
  #         kubectl apply -f manifests/hello-app-service.yaml